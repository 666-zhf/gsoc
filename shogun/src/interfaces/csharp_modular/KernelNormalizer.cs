/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class KernelNormalizer : SGObject {
  private HandleRef swigCPtr;

  internal KernelNormalizer(IntPtr cPtr, bool cMemoryOwn) : base(modshogunPINVOKE.KernelNormalizerUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(KernelNormalizer obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~KernelNormalizer() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          modshogunPINVOKE.delete_KernelNormalizer(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public virtual bool init(Kernel k) {
    bool ret = modshogunPINVOKE.KernelNormalizer_init(swigCPtr, Kernel.getCPtr(k));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual double normalize(double value, int idx_lhs, int idx_rhs) {
    double ret = modshogunPINVOKE.KernelNormalizer_normalize(swigCPtr, value, idx_lhs, idx_rhs);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual double normalize_lhs(double value, int idx_lhs) {
    double ret = modshogunPINVOKE.KernelNormalizer_normalize_lhs(swigCPtr, value, idx_lhs);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual double normalize_rhs(double value, int idx_rhs) {
    double ret = modshogunPINVOKE.KernelNormalizer_normalize_rhs(swigCPtr, value, idx_rhs);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void register_params() {
    modshogunPINVOKE.KernelNormalizer_register_params(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public ENormalizerType get_normalizer_type() {
    ENormalizerType ret = (ENormalizerType)modshogunPINVOKE.KernelNormalizer_get_normalizer_type(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void set_normalizer_type(ENormalizerType type) {
    modshogunPINVOKE.KernelNormalizer_set_normalizer_type(swigCPtr, (int)type);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

}
