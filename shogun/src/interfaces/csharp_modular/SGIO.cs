/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class SGIO : IDisposable {
  private HandleRef swigCPtr;
  protected bool swigCMemOwn;

  internal SGIO(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SGIO obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SGIO() {
    Dispose();
  }

  public virtual void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          modshogunPINVOKE.delete_SGIO(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
    }
  }

  public SGIO() : this(modshogunPINVOKE.new_SGIO__SWIG_0(), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public SGIO(SGIO orig) : this(modshogunPINVOKE.new_SGIO__SWIG_1(SGIO.getCPtr(orig)), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_loglevel(EMessageType level) {
    modshogunPINVOKE.SGIO_set_loglevel(swigCPtr, (int)level);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public EMessageType get_loglevel() {
    EMessageType ret = (EMessageType)modshogunPINVOKE.SGIO_get_loglevel(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool get_show_progress() {
    bool ret = modshogunPINVOKE.SGIO_get_show_progress(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool get_show_file_and_line() {
    bool ret = modshogunPINVOKE.SGIO_get_show_file_and_line(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool get_syntax_highlight() {
    bool ret = modshogunPINVOKE.SGIO_get_syntax_highlight(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void message(EMessageType prio, string file, int line, string fmt) {
    modshogunPINVOKE.SGIO_message(swigCPtr, (int)prio, file, line, fmt);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void progress(double current_val, double min_val, double max_val, int decimals, string prefix) {
    modshogunPINVOKE.SGIO_progress__SWIG_0(swigCPtr, current_val, min_val, max_val, decimals, prefix);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void progress(double current_val, double min_val, double max_val, int decimals) {
    modshogunPINVOKE.SGIO_progress__SWIG_1(swigCPtr, current_val, min_val, max_val, decimals);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void progress(double current_val, double min_val, double max_val) {
    modshogunPINVOKE.SGIO_progress__SWIG_2(swigCPtr, current_val, min_val, max_val);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void progress(double current_val, double min_val) {
    modshogunPINVOKE.SGIO_progress__SWIG_3(swigCPtr, current_val, min_val);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void progress(double current_val) {
    modshogunPINVOKE.SGIO_progress__SWIG_4(swigCPtr, current_val);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void absolute_progress(double current_val, double val, double min_val, double max_val, int decimals, string prefix) {
    modshogunPINVOKE.SGIO_absolute_progress__SWIG_0(swigCPtr, current_val, val, min_val, max_val, decimals, prefix);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void absolute_progress(double current_val, double val, double min_val, double max_val, int decimals) {
    modshogunPINVOKE.SGIO_absolute_progress__SWIG_1(swigCPtr, current_val, val, min_val, max_val, decimals);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void absolute_progress(double current_val, double val, double min_val, double max_val) {
    modshogunPINVOKE.SGIO_absolute_progress__SWIG_2(swigCPtr, current_val, val, min_val, max_val);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void absolute_progress(double current_val, double val, double min_val) {
    modshogunPINVOKE.SGIO_absolute_progress__SWIG_3(swigCPtr, current_val, val, min_val);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void absolute_progress(double current_val, double val) {
    modshogunPINVOKE.SGIO_absolute_progress__SWIG_4(swigCPtr, current_val, val);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void done() {
    modshogunPINVOKE.SGIO_done(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void not_implemented(string file, int line) {
    modshogunPINVOKE.SGIO_not_implemented(swigCPtr, file, line);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void deprecated(string file, int line) {
    modshogunPINVOKE.SGIO_deprecated(swigCPtr, file, line);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void buffered_message(EMessageType prio, string fmt) {
    modshogunPINVOKE.SGIO_buffered_message(swigCPtr, (int)prio, fmt);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public static string skip_spaces(string str) {
    string ret = modshogunPINVOKE.SGIO_skip_spaces(str);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static string skip_blanks(string str) {
    string ret = modshogunPINVOKE.SGIO_skip_blanks(str);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_FILE get_target() {
    IntPtr cPtr = modshogunPINVOKE.SGIO_get_target(swigCPtr);
    SWIGTYPE_p_FILE ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_FILE(cPtr, false);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void set_target(SWIGTYPE_p_FILE target) {
    modshogunPINVOKE.SGIO_set_target(swigCPtr, SWIGTYPE_p_FILE.getCPtr(target));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_target_to_stderr() {
    modshogunPINVOKE.SGIO_set_target_to_stderr(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_target_to_stdout() {
    modshogunPINVOKE.SGIO_set_target_to_stdout(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void enable_progress() {
    modshogunPINVOKE.SGIO_enable_progress(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void disable_progress() {
    modshogunPINVOKE.SGIO_disable_progress(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void enable_file_and_line() {
    modshogunPINVOKE.SGIO_enable_file_and_line(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void disable_file_and_line() {
    modshogunPINVOKE.SGIO_disable_file_and_line(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void enable_syntax_highlighting() {
    modshogunPINVOKE.SGIO_enable_syntax_highlighting(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void disable_syntax_highlighting() {
    modshogunPINVOKE.SGIO_disable_syntax_highlighting(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public static void set_dirname(string dirname) {
    modshogunPINVOKE.SGIO_set_dirname(dirname);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public static string concat_filename(string filename) {
    string ret = modshogunPINVOKE.SGIO_concat_filename(filename);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static int filter(SWIGTYPE_p_dirent d) {
    int ret = modshogunPINVOKE.SGIO_filter(SWIGTYPE_p_dirent.getCPtr(d));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int ref_count() {
    int ret = modshogunPINVOKE.SGIO_ref_count(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public string get_name() {
    string ret = modshogunPINVOKE.SGIO_get_name(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool save_serializable(SWIGTYPE_p_CSerializableFile file, string prefix) {
    bool ret = modshogunPINVOKE.SGIO_save_serializable__SWIG_0(swigCPtr, SWIGTYPE_p_CSerializableFile.getCPtr(file), prefix);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool save_serializable(SWIGTYPE_p_CSerializableFile file) {
    bool ret = modshogunPINVOKE.SGIO_save_serializable__SWIG_1(swigCPtr, SWIGTYPE_p_CSerializableFile.getCPtr(file));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool load_serializable(SWIGTYPE_p_CSerializableFile file, string prefix) {
    bool ret = modshogunPINVOKE.SGIO_load_serializable__SWIG_0(swigCPtr, SWIGTYPE_p_CSerializableFile.getCPtr(file), prefix);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool load_serializable(SWIGTYPE_p_CSerializableFile file) {
    bool ret = modshogunPINVOKE.SGIO_load_serializable__SWIG_1(swigCPtr, SWIGTYPE_p_CSerializableFile.getCPtr(file));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
