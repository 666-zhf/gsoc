/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class Time : SGObject {
  private HandleRef swigCPtr;

  internal Time(IntPtr cPtr, bool cMemoryOwn) : base(modshogunPINVOKE.TimeUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(Time obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~Time() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          modshogunPINVOKE.delete_Time(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public Time(bool start) : this(modshogunPINVOKE.new_Time__SWIG_0(start), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public Time() : this(modshogunPINVOKE.new_Time__SWIG_1(), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_clock_t cur_runtime(bool verbose) {
    SWIGTYPE_p_clock_t ret = new SWIGTYPE_p_clock_t(modshogunPINVOKE.Time_cur_runtime__SWIG_0(swigCPtr, verbose), true);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_clock_t cur_runtime() {
    SWIGTYPE_p_clock_t ret = new SWIGTYPE_p_clock_t(modshogunPINVOKE.Time_cur_runtime__SWIG_1(swigCPtr), true);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_clock_t cur_runtime_diff(bool verbose) {
    SWIGTYPE_p_clock_t ret = new SWIGTYPE_p_clock_t(modshogunPINVOKE.Time_cur_runtime_diff__SWIG_0(swigCPtr, verbose), true);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_clock_t cur_runtime_diff() {
    SWIGTYPE_p_clock_t ret = new SWIGTYPE_p_clock_t(modshogunPINVOKE.Time_cur_runtime_diff__SWIG_1(swigCPtr), true);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double cur_runtime_diff_sec(bool verbose) {
    double ret = modshogunPINVOKE.Time_cur_runtime_diff_sec__SWIG_0(swigCPtr, verbose);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double cur_runtime_diff_sec() {
    double ret = modshogunPINVOKE.Time_cur_runtime_diff_sec__SWIG_1(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double start(bool verbose) {
    double ret = modshogunPINVOKE.Time_start__SWIG_0(swigCPtr, verbose);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double start() {
    double ret = modshogunPINVOKE.Time_start__SWIG_1(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double cur_time_diff(bool verbose) {
    double ret = modshogunPINVOKE.Time_cur_time_diff__SWIG_0(swigCPtr, verbose);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double cur_time_diff() {
    double ret = modshogunPINVOKE.Time_cur_time_diff__SWIG_1(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double time_diff_sec(bool verbose) {
    double ret = modshogunPINVOKE.Time_time_diff_sec__SWIG_0(swigCPtr, verbose);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double time_diff_sec() {
    double ret = modshogunPINVOKE.Time_time_diff_sec__SWIG_1(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double stop(bool verbose) {
    double ret = modshogunPINVOKE.Time_stop__SWIG_0(swigCPtr, verbose);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double stop() {
    double ret = modshogunPINVOKE.Time_stop__SWIG_1(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static double get_runtime() {
    double ret = modshogunPINVOKE.Time_get_runtime();
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static double get_curtime() {
    double ret = modshogunPINVOKE.Time_get_curtime();
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
