/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class CustomKernel : Kernel {
  private HandleRef swigCPtr;

  internal CustomKernel(IntPtr cPtr, bool cMemoryOwn) : base(modshogunPINVOKE.CustomKernelUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CustomKernel obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CustomKernel() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          modshogunPINVOKE.delete_CustomKernel(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public CustomKernel() : this(modshogunPINVOKE.new_CustomKernel__SWIG_0(), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public CustomKernel(Kernel k) : this(modshogunPINVOKE.new_CustomKernel__SWIG_1(Kernel.getCPtr(k)), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public CustomKernel(double[,] km) : this(modshogunPINVOKE.new_CustomKernel__SWIG_2(km.GetLength(0), km.GetLength(1), km), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool dummy_init(int rows, int cols) {
    bool ret = modshogunPINVOKE.CustomKernel_dummy_init(swigCPtr, rows, cols);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool set_triangle_kernel_matrix_from_triangle(double[] tri_kernel_matrix) {
    bool ret = modshogunPINVOKE.CustomKernel_set_triangle_kernel_matrix_from_triangle(swigCPtr, tri_kernel_matrix.Length, tri_kernel_matrix);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool set_triangle_kernel_matrix_from_full(double[,] full_kernel_matrix) {
    bool ret = modshogunPINVOKE.CustomKernel_set_triangle_kernel_matrix_from_full(swigCPtr, full_kernel_matrix.GetLength(0), full_kernel_matrix.GetLength(1), full_kernel_matrix);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool set_full_kernel_matrix_from_full(float[,] full_kernel_matrix) {
    bool ret = modshogunPINVOKE.CustomKernel_set_full_kernel_matrix_from_full__SWIG_0(swigCPtr, full_kernel_matrix.GetLength(0), full_kernel_matrix.GetLength(1), full_kernel_matrix);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool set_full_kernel_matrix_from_full(double[,] full_kernel_matrix) {
    bool ret = modshogunPINVOKE.CustomKernel_set_full_kernel_matrix_from_full__SWIG_1(swigCPtr, full_kernel_matrix.GetLength(0), full_kernel_matrix.GetLength(1), full_kernel_matrix);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
