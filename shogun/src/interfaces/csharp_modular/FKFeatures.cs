/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class FKFeatures : RealFeatures {
  private HandleRef swigCPtr;

  internal FKFeatures(IntPtr cPtr, bool cMemoryOwn) : base(modshogunPINVOKE.FKFeaturesUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(FKFeatures obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~FKFeatures() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          modshogunPINVOKE.delete_FKFeatures(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public FKFeatures() : this(modshogunPINVOKE.new_FKFeatures__SWIG_0(), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public FKFeatures(int size, HMM p, HMM n) : this(modshogunPINVOKE.new_FKFeatures__SWIG_1(size, HMM.getCPtr(p), HMM.getCPtr(n)), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public FKFeatures(FKFeatures orig) : this(modshogunPINVOKE.new_FKFeatures__SWIG_2(FKFeatures.getCPtr(orig)), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_models(HMM p, HMM n) {
    modshogunPINVOKE.FKFeatures_set_models(swigCPtr, HMM.getCPtr(p), HMM.getCPtr(n));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_a(double a) {
    modshogunPINVOKE.FKFeatures_set_a(swigCPtr, a);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public double get_a() {
    double ret = modshogunPINVOKE.FKFeatures_get_a(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_double set_feature_matrix() {
    IntPtr cPtr = modshogunPINVOKE.FKFeatures_set_feature_matrix(swigCPtr);
    SWIGTYPE_p_double ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double set_opt_a(double a) {
    double ret = modshogunPINVOKE.FKFeatures_set_opt_a__SWIG_0(swigCPtr, a);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double set_opt_a() {
    double ret = modshogunPINVOKE.FKFeatures_set_opt_a__SWIG_1(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public double get_weight_a() {
    double ret = modshogunPINVOKE.FKFeatures_get_weight_a(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
