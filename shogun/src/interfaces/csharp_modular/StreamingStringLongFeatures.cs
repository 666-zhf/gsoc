/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class StreamingStringLongFeatures : StreamingFeatures {
  private HandleRef swigCPtr;

  internal StreamingStringLongFeatures(IntPtr cPtr, bool cMemoryOwn) : base(modshogunPINVOKE.StreamingStringLongFeaturesUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(StreamingStringLongFeatures obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~StreamingStringLongFeatures() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          modshogunPINVOKE.delete_StreamingStringLongFeatures(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public StreamingStringLongFeatures() : this(modshogunPINVOKE.new_StreamingStringLongFeatures__SWIG_0(), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public StreamingStringLongFeatures(StreamingFile file, bool is_labelled, int size) : this(modshogunPINVOKE.new_StreamingStringLongFeatures__SWIG_1(StreamingFile.getCPtr(file), is_labelled, size), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void use_alphabet(EAlphabet alpha) {
    modshogunPINVOKE.StreamingStringLongFeatures_use_alphabet__SWIG_0(swigCPtr, (int)alpha);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void use_alphabet(Alphabet alpha) {
    modshogunPINVOKE.StreamingStringLongFeatures_use_alphabet__SWIG_1(swigCPtr, Alphabet.getCPtr(alpha));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_remap(Alphabet ascii_alphabet, Alphabet binary_alphabet) {
    modshogunPINVOKE.StreamingStringLongFeatures_set_remap__SWIG_0(swigCPtr, Alphabet.getCPtr(ascii_alphabet), Alphabet.getCPtr(binary_alphabet));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_remap(EAlphabet ascii_alphabet, EAlphabet binary_alphabet) {
    modshogunPINVOKE.StreamingStringLongFeatures_set_remap__SWIG_1(swigCPtr, (int)ascii_alphabet, (int)binary_alphabet);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_remap(EAlphabet ascii_alphabet) {
    modshogunPINVOKE.StreamingStringLongFeatures_set_remap__SWIG_2(swigCPtr, (int)ascii_alphabet);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_remap() {
    modshogunPINVOKE.StreamingStringLongFeatures_set_remap__SWIG_3(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public Alphabet get_alphabet() {
    IntPtr cPtr = modshogunPINVOKE.StreamingStringLongFeatures_get_alphabet(swigCPtr);
    Alphabet ret = (cPtr == IntPtr.Zero) ? null : new Alphabet(cPtr, false);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_long_double get_num_symbols() {
    SWIGTYPE_p_long_double ret = new SWIGTYPE_p_long_double(modshogunPINVOKE.StreamingStringLongFeatures_get_num_symbols(swigCPtr), true);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_p_shogun__SGStringT_long_long_t get_vector() {
    SWIGTYPE_p_shogun__SGStringT_long_long_t ret = new SWIGTYPE_p_shogun__SGStringT_long_long_t(modshogunPINVOKE.StreamingStringLongFeatures_get_vector(swigCPtr), true);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual int get_vector_length() {
    int ret = modshogunPINVOKE.StreamingStringLongFeatures_get_vector_length(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
