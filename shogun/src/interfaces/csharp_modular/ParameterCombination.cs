/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ParameterCombination : SGObject {
  private HandleRef swigCPtr;

  internal ParameterCombination(IntPtr cPtr, bool cMemoryOwn) : base(modshogunPINVOKE.ParameterCombinationUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ParameterCombination obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ParameterCombination() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          modshogunPINVOKE.delete_ParameterCombination(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public ParameterCombination() : this(modshogunPINVOKE.new_ParameterCombination__SWIG_0(), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void print_tree(int prefix_num) {
    modshogunPINVOKE.ParameterCombination_print_tree__SWIG_0(swigCPtr, prefix_num);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void print_tree() {
    modshogunPINVOKE.ParameterCombination_print_tree__SWIG_1(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public ParameterCombination(SWIGTYPE_p_shogun__Parameter param) : this(modshogunPINVOKE.new_ParameterCombination__SWIG_1(SWIGTYPE_p_shogun__Parameter.getCPtr(param)), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void apply_to_modsel_parameter(SWIGTYPE_p_shogun__Parameter parameter) {
    modshogunPINVOKE.ParameterCombination_apply_to_modsel_parameter(swigCPtr, SWIGTYPE_p_shogun__Parameter.getCPtr(parameter));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void apply_to_machine(Machine machine) {
    modshogunPINVOKE.ParameterCombination_apply_to_machine(swigCPtr, Machine.getCPtr(machine));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void append_child(ParameterCombination child) {
    modshogunPINVOKE.ParameterCombination_append_child(swigCPtr, ParameterCombination.getCPtr(child));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public ParameterCombination copy_tree() {
    IntPtr cPtr = modshogunPINVOKE.ParameterCombination_copy_tree(swigCPtr);
    ParameterCombination ret = (cPtr == IntPtr.Zero) ? null : new ParameterCombination(cPtr, false);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_CDynamicObjectArrayT_shogun__CParameterCombination_t leaf_sets_multiplication(SWIGTYPE_p_CDynamicObjectArrayT_CDynamicObjectArrayT_shogun__CParameterCombination_t_t sets, ParameterCombination new_root) {
    IntPtr cPtr = modshogunPINVOKE.ParameterCombination_leaf_sets_multiplication(SWIGTYPE_p_CDynamicObjectArrayT_CDynamicObjectArrayT_shogun__CParameterCombination_t_t.getCPtr(sets), ParameterCombination.getCPtr(new_root));
    SWIGTYPE_p_CDynamicObjectArrayT_shogun__CParameterCombination_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_CDynamicObjectArrayT_shogun__CParameterCombination_t(cPtr, false);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool has_children() {
    bool ret = modshogunPINVOKE.ParameterCombination_has_children(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public static SWIGTYPE_p_DynArrayT_shogun__Parameter_p_t parameter_set_multiplication(SWIGTYPE_p_DynArrayT_shogun__Parameter_p_t set_1, SWIGTYPE_p_DynArrayT_shogun__Parameter_p_t set_2) {
    IntPtr cPtr = modshogunPINVOKE.ParameterCombination_parameter_set_multiplication(SWIGTYPE_p_DynArrayT_shogun__Parameter_p_t.getCPtr(set_1), SWIGTYPE_p_DynArrayT_shogun__Parameter_p_t.getCPtr(set_2));
    SWIGTYPE_p_DynArrayT_shogun__Parameter_p_t ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_DynArrayT_shogun__Parameter_p_t(cPtr, false);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
