/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class TOPFeatures : RealFeatures {
  private HandleRef swigCPtr;

  internal TOPFeatures(IntPtr cPtr, bool cMemoryOwn) : base(modshogunPINVOKE.TOPFeaturesUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(TOPFeatures obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~TOPFeatures() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          modshogunPINVOKE.delete_TOPFeatures(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public TOPFeatures() : this(modshogunPINVOKE.new_TOPFeatures__SWIG_0(), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public TOPFeatures(int size, HMM p, HMM n, bool neglin, bool poslin) : this(modshogunPINVOKE.new_TOPFeatures__SWIG_1(size, HMM.getCPtr(p), HMM.getCPtr(n), neglin, poslin), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public TOPFeatures(TOPFeatures orig) : this(modshogunPINVOKE.new_TOPFeatures__SWIG_2(TOPFeatures.getCPtr(orig)), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_models(HMM p, HMM n) {
    modshogunPINVOKE.TOPFeatures_set_models(swigCPtr, HMM.getCPtr(p), HMM.getCPtr(n));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual SWIGTYPE_p_double set_feature_matrix() {
    IntPtr cPtr = modshogunPINVOKE.TOPFeatures_set_feature_matrix(swigCPtr);
    SWIGTYPE_p_double ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_double(cPtr, false);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int compute_num_features() {
    int ret = modshogunPINVOKE.TOPFeatures_compute_num_features(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool compute_relevant_indizes(HMM hmm, SWIGTYPE_p_shogun__T_HMM_INDIZES hmm_idx) {
    bool ret = modshogunPINVOKE.TOPFeatures_compute_relevant_indizes(swigCPtr, HMM.getCPtr(hmm), SWIGTYPE_p_shogun__T_HMM_INDIZES.getCPtr(hmm_idx));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
