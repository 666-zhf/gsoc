/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class CombinedDotFeatures : DotFeatures {
  private HandleRef swigCPtr;

  internal CombinedDotFeatures(IntPtr cPtr, bool cMemoryOwn) : base(modshogunPINVOKE.CombinedDotFeaturesUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(CombinedDotFeatures obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~CombinedDotFeatures() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          modshogunPINVOKE.delete_CombinedDotFeatures(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public CombinedDotFeatures() : this(modshogunPINVOKE.new_CombinedDotFeatures__SWIG_0(), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public CombinedDotFeatures(CombinedDotFeatures orig) : this(modshogunPINVOKE.new_CombinedDotFeatures__SWIG_1(CombinedDotFeatures.getCPtr(orig)), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void list_feature_objs() {
    modshogunPINVOKE.CombinedDotFeatures_list_feature_objs(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public DotFeatures get_first_feature_obj() {
    IntPtr cPtr = modshogunPINVOKE.CombinedDotFeatures_get_first_feature_obj__SWIG_0(swigCPtr);
    DotFeatures ret = (cPtr == IntPtr.Zero) ? null : new DotFeatures(cPtr, false);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public DotFeatures get_first_feature_obj(ListElement current) {
    IntPtr cPtr = modshogunPINVOKE.CombinedDotFeatures_get_first_feature_obj__SWIG_1(swigCPtr, ListElement.getCPtr(current));
    DotFeatures ret = (cPtr == IntPtr.Zero) ? null : new DotFeatures(cPtr, false);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public DotFeatures get_next_feature_obj() {
    IntPtr cPtr = modshogunPINVOKE.CombinedDotFeatures_get_next_feature_obj__SWIG_0(swigCPtr);
    DotFeatures ret = (cPtr == IntPtr.Zero) ? null : new DotFeatures(cPtr, false);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public DotFeatures get_next_feature_obj(ListElement current) {
    IntPtr cPtr = modshogunPINVOKE.CombinedDotFeatures_get_next_feature_obj__SWIG_1(swigCPtr, ListElement.getCPtr(current));
    DotFeatures ret = (cPtr == IntPtr.Zero) ? null : new DotFeatures(cPtr, false);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public DotFeatures get_last_feature_obj() {
    IntPtr cPtr = modshogunPINVOKE.CombinedDotFeatures_get_last_feature_obj(swigCPtr);
    DotFeatures ret = (cPtr == IntPtr.Zero) ? null : new DotFeatures(cPtr, false);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool insert_feature_obj(DotFeatures obj) {
    bool ret = modshogunPINVOKE.CombinedDotFeatures_insert_feature_obj(swigCPtr, DotFeatures.getCPtr(obj));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool append_feature_obj(DotFeatures obj) {
    bool ret = modshogunPINVOKE.CombinedDotFeatures_append_feature_obj(swigCPtr, DotFeatures.getCPtr(obj));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public bool delete_feature_obj() {
    bool ret = modshogunPINVOKE.CombinedDotFeatures_delete_feature_obj(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public int get_num_feature_obj() {
    int ret = modshogunPINVOKE.CombinedDotFeatures_get_num_feature_obj(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual void get_subfeature_weights(SWIGTYPE_p_p_double weights, SWIGTYPE_p_int num_weights) {
    modshogunPINVOKE.CombinedDotFeatures_get_subfeature_weights(swigCPtr, SWIGTYPE_p_p_double.getCPtr(weights), SWIGTYPE_p_int.getCPtr(num_weights));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual void set_subfeature_weights(SWIGTYPE_p_double weights, int num_weights) {
    modshogunPINVOKE.CombinedDotFeatures_set_subfeature_weights(swigCPtr, SWIGTYPE_p_double.getCPtr(weights), num_weights);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

}
