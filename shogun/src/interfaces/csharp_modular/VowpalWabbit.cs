/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class VowpalWabbit : OnlineLinearMachine {
  private HandleRef swigCPtr;

  internal VowpalWabbit(IntPtr cPtr, bool cMemoryOwn) : base(modshogunPINVOKE.VowpalWabbitUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(VowpalWabbit obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~VowpalWabbit() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          modshogunPINVOKE.delete_VowpalWabbit(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public VowpalWabbit() : this(modshogunPINVOKE.new_VowpalWabbit__SWIG_0(), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public VowpalWabbit(StreamingVwFeatures feat) : this(modshogunPINVOKE.new_VowpalWabbit__SWIG_1(StreamingVwFeatures.getCPtr(feat)), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void reinitialize_weights() {
    modshogunPINVOKE.VowpalWabbit_reinitialize_weights(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_no_training(bool dont_train) {
    modshogunPINVOKE.VowpalWabbit_set_no_training(swigCPtr, dont_train);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_adaptive(bool adaptive_learning) {
    modshogunPINVOKE.VowpalWabbit_set_adaptive(swigCPtr, adaptive_learning);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_exact_adaptive_norm(bool exact_adaptive) {
    modshogunPINVOKE.VowpalWabbit_set_exact_adaptive_norm(swigCPtr, exact_adaptive);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_num_passes(int passes) {
    modshogunPINVOKE.VowpalWabbit_set_num_passes(swigCPtr, passes);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void load_regressor(string file_name) {
    modshogunPINVOKE.VowpalWabbit_load_regressor(swigCPtr, file_name);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_regressor_out(string file_name, bool is_text) {
    modshogunPINVOKE.VowpalWabbit_set_regressor_out__SWIG_0(swigCPtr, file_name, is_text);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_regressor_out(string file_name) {
    modshogunPINVOKE.VowpalWabbit_set_regressor_out__SWIG_1(swigCPtr, file_name);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_prediction_out(string file_name) {
    modshogunPINVOKE.VowpalWabbit_set_prediction_out(swigCPtr, file_name);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void add_quadratic_pair(string pair) {
    modshogunPINVOKE.VowpalWabbit_add_quadratic_pair(swigCPtr, pair);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public virtual bool train_machine(Features feat) {
    bool ret = modshogunPINVOKE.VowpalWabbit_train_machine__SWIG_0(swigCPtr, Features.getCPtr(feat));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual bool train_machine() {
    bool ret = modshogunPINVOKE.VowpalWabbit_train_machine__SWIG_1(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual float predict_and_finalize(SWIGTYPE_p_VwExample ex) {
    float ret = modshogunPINVOKE.VowpalWabbit_predict_and_finalize(swigCPtr, SWIGTYPE_p_VwExample.getCPtr(ex));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public float compute_exact_norm(SWIGTYPE_p_VwExample ex, SWIGTYPE_p_float sum_abs_x) {
    float ret = modshogunPINVOKE.VowpalWabbit_compute_exact_norm(swigCPtr, SWIGTYPE_p_VwExample.getCPtr(ex), SWIGTYPE_p_float.getCPtr(sum_abs_x));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public float compute_exact_norm_quad(SWIGTYPE_p_float weights, SWIGTYPE_p_VwFeature page_feature, SWIGTYPE_p_v_arrayT_VwFeature_t offer_features, SWIGTYPE_p_vw_size_t mask, float g, SWIGTYPE_p_float sum_abs_x) {
    float ret = modshogunPINVOKE.VowpalWabbit_compute_exact_norm_quad(swigCPtr, SWIGTYPE_p_float.getCPtr(weights), SWIGTYPE_p_VwFeature.getCPtr(page_feature), SWIGTYPE_p_v_arrayT_VwFeature_t.getCPtr(offer_features), SWIGTYPE_p_vw_size_t.getCPtr(mask), g, SWIGTYPE_p_float.getCPtr(sum_abs_x));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public virtual SWIGTYPE_p_CVwEnvironment get_env() {
    IntPtr cPtr = modshogunPINVOKE.VowpalWabbit_get_env(swigCPtr);
    SWIGTYPE_p_CVwEnvironment ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_CVwEnvironment(cPtr, false);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

}
