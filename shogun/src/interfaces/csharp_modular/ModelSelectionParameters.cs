/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class ModelSelectionParameters : SGObject {
  private HandleRef swigCPtr;

  internal ModelSelectionParameters(IntPtr cPtr, bool cMemoryOwn) : base(modshogunPINVOKE.ModelSelectionParametersUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(ModelSelectionParameters obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~ModelSelectionParameters() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          modshogunPINVOKE.delete_ModelSelectionParameters(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public ModelSelectionParameters() : this(modshogunPINVOKE.new_ModelSelectionParameters__SWIG_0(), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public ModelSelectionParameters(string node_name) : this(modshogunPINVOKE.new_ModelSelectionParameters__SWIG_1(node_name), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public ModelSelectionParameters(string node_name, SGObject sgobject) : this(modshogunPINVOKE.new_ModelSelectionParameters__SWIG_2(node_name, SGObject.getCPtr(sgobject)), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void append_child(ModelSelectionParameters child) {
    modshogunPINVOKE.ModelSelectionParameters_append_child(swigCPtr, ModelSelectionParameters.getCPtr(child));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void print_tree(int prefix_num) {
    modshogunPINVOKE.ModelSelectionParameters_print_tree__SWIG_0(swigCPtr, prefix_num);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void print_tree() {
    modshogunPINVOKE.ModelSelectionParameters_print_tree__SWIG_1(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public DynamicParameterCombinationArray get_combinations() {
    IntPtr cPtr = modshogunPINVOKE.ModelSelectionParameters_get_combinations(swigCPtr);
    DynamicParameterCombinationArray ret = (cPtr == IntPtr.Zero) ? null : new DynamicParameterCombinationArray(cPtr, false);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void build_values(double min, double max, ERangeType type, double step, double type_base) {
    modshogunPINVOKE.ModelSelectionParameters_build_values__SWIG_0(swigCPtr, min, max, (int)type, step, type_base);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void build_values(double min, double max, ERangeType type, double step) {
    modshogunPINVOKE.ModelSelectionParameters_build_values__SWIG_1(swigCPtr, min, max, (int)type, step);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void build_values(double min, double max, ERangeType type) {
    modshogunPINVOKE.ModelSelectionParameters_build_values__SWIG_2(swigCPtr, min, max, (int)type);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void build_values(int min, int max, ERangeType type, int step, int type_base) {
    modshogunPINVOKE.ModelSelectionParameters_build_values__SWIG_3(swigCPtr, min, max, (int)type, step, type_base);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void build_values(int min, int max, ERangeType type, int step) {
    modshogunPINVOKE.ModelSelectionParameters_build_values__SWIG_4(swigCPtr, min, max, (int)type, step);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void build_values(int min, int max, ERangeType type) {
    modshogunPINVOKE.ModelSelectionParameters_build_values__SWIG_5(swigCPtr, min, max, (int)type);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

}
