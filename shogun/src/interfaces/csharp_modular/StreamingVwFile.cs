/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class StreamingVwFile : StreamingFile {
  private HandleRef swigCPtr;

  internal StreamingVwFile(IntPtr cPtr, bool cMemoryOwn) : base(modshogunPINVOKE.StreamingVwFileUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(StreamingVwFile obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~StreamingVwFile() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          modshogunPINVOKE.delete_StreamingVwFile(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public StreamingVwFile() : this(modshogunPINVOKE.new_StreamingVwFile__SWIG_0(), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public StreamingVwFile(string fname, char rw) : this(modshogunPINVOKE.new_StreamingVwFile__SWIG_1(fname, rw), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public StreamingVwFile(string fname) : this(modshogunPINVOKE.new_StreamingVwFile__SWIG_2(fname), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_parser_type(E_VW_PARSER_TYPE type) {
    modshogunPINVOKE.StreamingVwFile_set_parser_type__SWIG_0(swigCPtr, (int)type);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_parser_type() {
    modshogunPINVOKE.StreamingVwFile_set_parser_type__SWIG_1(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_env(SWIGTYPE_p_CVwEnvironment env_to_use) {
    modshogunPINVOKE.StreamingVwFile_set_env(swigCPtr, SWIGTYPE_p_CVwEnvironment.getCPtr(env_to_use));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public SWIGTYPE_p_CVwEnvironment get_env() {
    IntPtr cPtr = modshogunPINVOKE.StreamingVwFile_get_env(swigCPtr);
    SWIGTYPE_p_CVwEnvironment ret = (cPtr == IntPtr.Zero) ? null : new SWIGTYPE_p_CVwEnvironment(cPtr, false);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void set_write_to_cache(bool write_cache) {
    modshogunPINVOKE.StreamingVwFile_set_write_to_cache(swigCPtr, write_cache);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public bool get_write_to_cache() {
    bool ret = modshogunPINVOKE.StreamingVwFile_get_write_to_cache(swigCPtr);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public SWIGTYPE_m_CVwParser__f_p_CIOBuffer_r_p_VwExample__int parse_example {
    set {
      modshogunPINVOKE.StreamingVwFile_parse_example_set(swigCPtr, SWIGTYPE_m_CVwParser__f_p_CIOBuffer_r_p_VwExample__int.getCMemberPtr(value));
      if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    } 
    get {
      string cMemberPtr = modshogunPINVOKE.StreamingVwFile_parse_example_get(swigCPtr);
      SWIGTYPE_m_CVwParser__f_p_CIOBuffer_r_p_VwExample__int ret = (cMemberPtr == null) ? null : new SWIGTYPE_m_CVwParser__f_p_CIOBuffer_r_p_VwExample__int(cMemberPtr, false);
      if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
      return ret;
    } 
  }

}
