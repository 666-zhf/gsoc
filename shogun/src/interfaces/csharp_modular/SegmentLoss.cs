/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;
using System.Runtime.InteropServices;

public class SegmentLoss : SGObject {
  private HandleRef swigCPtr;

  internal SegmentLoss(IntPtr cPtr, bool cMemoryOwn) : base(modshogunPINVOKE.SegmentLossUpcast(cPtr), cMemoryOwn) {
    swigCPtr = new HandleRef(this, cPtr);
  }

  internal static HandleRef getCPtr(SegmentLoss obj) {
    return (obj == null) ? new HandleRef(null, IntPtr.Zero) : obj.swigCPtr;
  }

  ~SegmentLoss() {
    Dispose();
  }

  public override void Dispose() {
    lock(this) {
      if (swigCPtr.Handle != IntPtr.Zero) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          modshogunPINVOKE.delete_SegmentLoss(swigCPtr);
        }
        swigCPtr = new HandleRef(null, IntPtr.Zero);
      }
      GC.SuppressFinalize(this);
      base.Dispose();
    }
  }

  public SegmentLoss() : this(modshogunPINVOKE.new_SegmentLoss(), true) {
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public float get_segment_loss(int from_pos, int to_pos, int segment_id) {
    float ret = modshogunPINVOKE.SegmentLoss_get_segment_loss(swigCPtr, from_pos, to_pos, segment_id);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public float get_segment_loss_extend(int from_pos, int to_pos, int segment_id) {
    float ret = modshogunPINVOKE.SegmentLoss_get_segment_loss_extend(swigCPtr, from_pos, to_pos, segment_id);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
    return ret;
  }

  public void set_segment_loss(SWIGTYPE_p_double segment_loss, int m, int n) {
    modshogunPINVOKE.SegmentLoss_set_segment_loss(swigCPtr, SWIGTYPE_p_double.getCPtr(segment_loss), m, n);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_segment_ids(SWIGTYPE_p_shogun__CArrayT_int_t segment_ids) {
    modshogunPINVOKE.SegmentLoss_set_segment_ids(swigCPtr, SWIGTYPE_p_shogun__CArrayT_int_t.getCPtr(segment_ids));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_segment_mask(SWIGTYPE_p_shogun__CArrayT_double_t segment_mask) {
    modshogunPINVOKE.SegmentLoss_set_segment_mask(swigCPtr, SWIGTYPE_p_shogun__CArrayT_double_t.getCPtr(segment_mask));
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void set_num_segment_types(int num_segment_types) {
    modshogunPINVOKE.SegmentLoss_set_num_segment_types(swigCPtr, num_segment_types);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

  public void compute_loss(SWIGTYPE_p_int all_pos, int len) {
    modshogunPINVOKE.SegmentLoss_compute_loss(swigCPtr, SWIGTYPE_p_int.getCPtr(all_pos), len);
    if (modshogunPINVOKE.SWIGPendingException.Pending) throw modshogunPINVOKE.SWIGPendingException.Retrieve();
  }

}
